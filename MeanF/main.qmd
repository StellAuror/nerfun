```{r}
source(file.path("b:\\Coding\\Nerfun", "run.R"))

pacman::p_load(
  tidyverse,
  gghalves,
  viridis
)
```

## Building model
```{r}
ldfRQ <- datasets::airquality |> f.split_data(.5, 1)

model <- lm(Ozone ~ Solar.R + Wind + Temp + Month, data = ldfRQ$Learn)
ldfRQ$Test$Prediction <- predict(model, ldfRQ$Test)
```

## Predicted vs. Actual
```{r, warning=FALSE}
ldfRQ$Test |> 
  ggplot(aes(
    y = Prediction,
    x = Ozone,
  )) + 
  geom_segment(aes(yend = Ozone)) +
  geom_point(size = 3) +
  geom_abline(slope = 1) +
  scale_x_continuous(limits = c(0, 125)) + 
  scale_y_continuous(limits = c(0, 125)) +
  theme_minimal() 
```

## Residuals vs. Predicted
```{r}
ldfRQ$Test |> 
  ggplot(aes(
    y = Prediction - Ozone,
    x = Prediction,
  )) + 
  geom_segment(aes(yend = 0)) +
  geom_point(size = 3) +
  geom_hline(yintercept = 0) +
  theme_minimal() 
```

## Boxplots
```{r, warning=FALSE}
ldfRQ$Test |>
  select(Ozone, Prediction) |>
  pivot_longer(names_to = "Type", values_to = "Value", cols = 1:2) |>
  ggplot(aes(
    y = Value,
    x = Type,
    color = Type,
    fill = Type
  )) +
  geom_half_boxplot(
    side = "l",
    alpha = 0.5,
    outlier.shape = NA
  ) +
  geom_half_violin(
    side = "r",
    alpha = 0.5,
    trim = TRUE
  ) +
  geom_half_point(
    side = "r",
    alpha = 0.8,
    position = position_jitter(width = 0.1),
    size = 2,
    color = "black"
  ) +
  scale_color_viridis_d() +
  scale_fill_viridis_d() +
  theme_minimal() +
  theme(legend.position = "none") 
```

## Tukey

### Influence (Weight) 
```{r}
threshold = 60

ldfRQ$Test |>
  ggplot(aes(
    y =  f.calc_tukey_weight(Prediction, 90),
    x = Prediction
  )) +
    geom_point() + 
    theme_minimal()
```

### Loss
Values are intentionally high, that's the result of how the function is defined
```{r}


ldfRQ$Test |>
  ggplot(aes(
    y =  f.calc_tukey_loss(Prediction, threshold),
    x = Prediction
  )) +
    
    geom_point() + 
    geom_hline(yintercept = (threshold^2 / 6), linetype = "dashed", color = "red") +
    theme_minimal()
```

```{r}
ggplot(ldfRQ$Test, aes(x = Prediction - Ozone)) +
   geom_histogram() +
   geom_vline(xintercept = 0)



```

## Huber 

```{r}
ldfRQ$Test |>
  ggplot(aes(
    y =  f.calc_huber(Prediction, 90),
    x = Prediction
  )) +
    geom_point() + 
    theme_minimal()
```

## Influence